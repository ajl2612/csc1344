procedure main()
	local letter, words, text, output, startWord, endWord, actualOutput
	
	letter := &letters

	while text := read() do {
	
		startWord := 1
		endWord := 1
		output := ""
		actualOutput := ""

		text ? while tab(upto(letter)) do { 
			output := output || text[endWord:&pos]
			startWord := &pos 
			tab(many(letter))
			endWord := &pos
			output := output || piggify( text[startWord:endWord] )
		}
		output := output || text[0:endWord]
		
		#replace all instances of more than one space with one space
		
		startWord := 1
		endWord := 1
		
		output ? while tab(upto(" ")) do {
			actualOutput := actualOutput || output[endWord:&pos]
			startWord := &pos
			tab(many(" "))
			endWord := &pos
			actualOutput := actualOutput || " "
		}

		write(actualOutput)
	}
	
end

procedure piggify(word)
	local rawinput, input, result, vowels ,vowelsAndY,firstVowel,continue

	vowels := 'aeiou'
	vowelsAndY := 'aeiouy'
	continue := 0


	rawinput := word
	input := map(rawinput[1:2], &ucase, &lcase)
	input := input || rawinput[0:2]


	if any(vowels,input[1]) & continue == 0 then {
		#write("first letter is non y vowel")
		result := input || "yay"
		continue := 1
	
	} else if input[1:3] == "qu" & continue == 0  then { 
		#write("first letters are qu")
		result := input[0:3] || "kway"
		;continue  := 1
	
	} else if  input[1] == "y" & continue == 0 then {
		#write("first letter is y")
		result := input[0:2] || "yay"
		continue := 1
	
	} else if any(vowelsAndY,input[1]) & continue == 0 then {
		#write("first letter is non y vowel")
		result := input || "yay"
		continue := 1

	} else if upto(vowelsAndY,input) & continue == 0 then { 
		#write("first letter is non vowel")
		firstVowel := upto(vowelsAndY,input)
		result := input[0:firstVowel] || input[1:firstVowel] || "ay"	
		continue := 1
	
	} else{
		#write("contains no vowels")
		result := input || "ay"
	}

	if any(&ucase, rawinput[1]) then {
		#write("first letter is capital")
		result := map(result[1],&lcase, &ucase) || result[0:2]
	}
	return result 

end
